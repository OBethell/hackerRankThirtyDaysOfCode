import java.util.*;
import java.io.*;
class Node{
    Node left,right;
    int data;
    Node(int data){
        this.data=data;
        left=right=null;
    }
}
class Solution{
    
    
// Function to keep track of height
public static int height(Node root, int height, int level){
    // increase level from previous
    level++;
    // if node does not exsist
    if(root == null){
        // do not add height
        return 0;
    }
    // if there is a node below...
    if(root.left != null || root.right != null){
        // And if it is a new level...
        if(level > height){
            // increase the hieght to new level
            height = level;
        }
        // If the height on the left path is greater than the rght path...
        if(height(root.left, height, level) > height(root.right, height, level)){
            // return the new height
            return 1 + height(root.left, height, level);
        }
        // If the the height on the right path is greater or equal to the right path
        if(height(root.left, height, level) <= height(root.right, height, level)){
            // return the new height
            return 1 + height(root.right, height, level);
        }
    // if there is no node below...
    }
    return 0;
}


public static int getHeight(Node root){
    //Write your code here
    int height = 0;
    int level = 0;
    return height(root, height, level);
    
    
}
	public static Node insert(Node root,int data){
        if(root==null){
            return new Node(data);
        }
        else{
            Node cur;
            if(data<=root.data){
                cur=insert(root.left,data);
                root.left=cur;
            }
            else{
                cur=insert(root.right,data);
                root.right=cur;
            }
            return root;
        }
    }
    public static void main(String args[]){
            Scanner sc=new Scanner(System.in);
            int T=sc.nextInt();
            Node root=null;
            while(T-->0){
                int data=sc.nextInt();
                root=insert(root,data);
            }
            int height=getHeight(root);
            System.out.println(height);
        }	
}
